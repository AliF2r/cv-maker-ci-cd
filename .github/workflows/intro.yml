name : Install & Build


env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}


on :
  push :


jobs :
  build :
    runs-on : ubuntu-latest

    steps :
      - uses : actions/checkout@v4

      - name : Show node version
        run : echo node -v

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.4.0
        with :
          version : 8
          run_install : false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: | 
            ${{ runner.os }}-pnpm-store-

      - name : Install dependencies
        run : pnpm install

      - name : Build the app
        run : pnpm run build


      - name : Test the connection
        run : |
          pnpm run preview &
          sleep 5
          curl -I http://localhost:4173
          

  snapshot:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 12

      - name: Install Dependencies
        run: npm install

      - name: Run Snapshot Script
        run: node snapshot.js

      - name: Upload Snapshots
        uses: actions/upload-artifact@v2
        with:
          name: snapshots
          path: |
            ./gen/cv.pdf
            ./gen/cv.mhtml

  deploy:
    runs-on : ubuntu-latest
    needs : snapshot

    steps :
      - uses: actions/checkout@v2

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.4.0
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}


      - uses: actions/checkout@v3

      - name: Netlify Deploy
        uses: jsmrcaga/action-netlify-deploy@master
        with:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          build_command : pnpm run build
          install_command : pnpm install
